// Code generated by MockGen. DO NOT EDIT.
// Source: lambda.go

// Package repo is a generated GoMock package.
package repo

import (
	context "context"
	reflect "reflect"

	dto "github.com/57blocks/auto-action/server/internal/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockLambda is a mock of Lambda interface.
type MockLambda struct {
	ctrl     *gomock.Controller
	recorder *MockLambdaMockRecorder
}

// MockLambdaMockRecorder is the mock recorder for MockLambda.
type MockLambdaMockRecorder struct {
	mock *MockLambda
}

// NewMockLambda creates a new mock instance.
func NewMockLambda(ctrl *gomock.Controller) *MockLambda {
	mock := &MockLambda{ctrl: ctrl}
	mock.recorder = &MockLambdaMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLambda) EXPECT() *MockLambdaMockRecorder {
	return m.recorder
}

// Info mocks base method.
func (m *MockLambda) Info(c context.Context, req *dto.ReqInfo) (*dto.RespInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Info", c, req)
	ret0, _ := ret[0].(*dto.RespInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Info indicates an expected call of Info.
func (mr *MockLambdaMockRecorder) Info(c, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Info", reflect.TypeOf((*MockLambda)(nil).Info), c, req)
}
