// Code generated by MockGen. DO NOT EDIT.
// Source: stellar.go

// Package testdata is a generated GoMock package.
package testdata

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	horizonclient "github.com/stellar/go/clients/horizonclient"
	horizon "github.com/stellar/go/protocols/horizon"
)

// MockStellar is a mock of Stellar interface.
type MockStellar struct {
	ctrl     *gomock.Controller
	recorder *MockStellarMockRecorder
}

// MockStellarMockRecorder is the mock recorder for MockStellar.
type MockStellarMockRecorder struct {
	mock *MockStellar
}

// NewMockStellar creates a new mock instance.
func NewMockStellar(ctrl *gomock.Controller) *MockStellar {
	mock := &MockStellar{ctrl: ctrl}
	mock.recorder = &MockStellarMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStellar) EXPECT() *MockStellarMockRecorder {
	return m.recorder
}

// AccountDetail mocks base method.
func (m *MockStellar) AccountDetail(c context.Context, req horizonclient.AccountRequest) (horizon.Account, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AccountDetail", c, req)
	ret0, _ := ret[0].(horizon.Account)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccountDetail indicates an expected call of AccountDetail.
func (mr *MockStellarMockRecorder) AccountDetail(c, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccountDetail", reflect.TypeOf((*MockStellar)(nil).AccountDetail), c, req)
}
